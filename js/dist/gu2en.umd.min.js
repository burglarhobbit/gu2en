!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).gu2en={})}(this,(function(e){"use strict";const n=["ક","ખ","ગ","ઘ","ચ","છ","જ","ઝ","ટ","ઠ","ડ","ઢ","ણ","ત","થ","દ","ધ","ન","પ","ફ","બ","ભ","મ","ય","ર","લ","વ","શ","ષ","સ","હ","ળ","ઞ"],a=["ka","kha","ga","gha","cha","chh","ja","jha","ṭa","ṭha","ḍa","ḍha","ṇa","ta","tha","da","dha","na","pa","fa","ba","bha","ma","ya","ra","la","va","sha","ṣha","sa","ha","ḷa","nya"],g=["ક્","ખ્","ગ્","ઘ્","ચ્","છ્","જ્","ઝ્","ટ્","ઠ્","ડ્","ઢ્","ણ્","ત્","થ્","દ્","ધ્","ન્","પ્","ફ્","બ્","ભ્","મ્","ય્","ર્","લ્","વ્","શ્","ષ્","સ્","હ્","ળ્","ઞ્"],t=["k","kh","g","gh","ch","chh","j","z","ṭ","ṭh","ḍ","ḍh","ṇ","t","th","d","dh","n","p","f","b","bh","m","y","r","l","v","sh","ṣh","s","h","ḷ","ny"],l=["ઓ","ઔ","આ","ઇ","ઈ","ઉ","ઊ","એ","ઐ","ઍ","ઑ","ૠ","અ"],h=["o","au","ā","i","ī","u","ū","e","ai","ĕ","ŏ","ṛu","a"],p=["િ","ી","ુ","ૂ","ે","ૈ","ો","ૌ","ૅ","ૉ","ૃ","્","ઃ","ા"],r=["i","ī","u","ū","e","ai","o","au","ĕ","ŏ","ṛu","","ah","ā"],c=["૦","૧","૨","૩","૪","૫","૬","૭","૮","૯"],s=["0","1","2","3","4","5","6","7","8","9"],o=["kh","gh","ch","chh","ṭh","ḍh","th","dh","bh","sh","ṣh","ny"],f=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","ā","ḍ","ĕ","ī","ḷ","ṇ","ŏ","ṛ","ṣ","ṭ","ū"],x=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","Ā","Ḍ","Ĕ","Ī","Ḷ","Ṇ","Ŏ","Ṛ","Ṣ","Ṭ","Ū"];function i(e,n,a){if(e.length!==n.length)return"";for(let g=0;g<e.length;g++){const t=new RegExp(e[g],"g");a=a.replace(t,n[g])}return a}e.transliterate=function(e){for(let a=0;a<n.length;a++)for(let g=0;g<p.length;g++){const l=new RegExp(n[a]+p[g]+"ઃ ","g"),h=t[a]+r[g]+"h"+r[g]+" ";e=e.replace(l,h)}if(-1!==e.indexOf("ં")){for(let a=0;a<n.length;a++)for(let g=0;g<p.length;g++){if(new RegExp(n[a]+p[g]+"ં[મપબભ]","g").test(e)){const l=new RegExp(n[a]+p[g]+"ં"),h=t[a]+r[g]+"m";e=e.replace(l,h)}else{const l=new RegExp(n[a]+p[g]+"ં","g"),h=t[a]+r[g]+"n";e=e.replace(l,h)}}for(let n=0;n<l.length;n++){if(new RegExp(l[n]+"ં[મપબભ]","g").test(e)){const a=new RegExp(l[n]+"ં","g"),g=h[n]+"m";e=e.replace(a,g)}else{const a=new RegExp(l[n]+"ં","g"),g=h[n]+"n";e=e.replace(a,g)}}for(let g=0;g<n.length;g++){if(new RegExp(n[g]+"ં[મપબભ]","g").test(e)){const t=new RegExp(n[g]+"ં","g"),l=a[g]+"m";e=e.replace(t,l)}else{const t=new RegExp(n[g]+"ં","g"),l=a[g]+"n";e=e.replace(t,l)}}}for(let a=0;a<n.length;a++)for(let g=0;g<p.length;g++){const l=new RegExp(n[a]+p[g],"g"),h=t[a]+r[g];e=e.replace(l,h)}e=i(g,t,e),e=i(p,r,e),e=i(l,h,e),e=i(n,a,e),e=i(c,s,e);for(let n=0;n<a.length;n++){const g=new RegExp(a[n]+" ","g"),l=t[n]+" ";e=e.replace(g,l)}for(let n=0;n<t.length;n++)for(let g=0;g<a.length;g++){const l=new RegExp(t[n]+t[g]+" ","g"),h=t[n]+a[g]+" ";e=e.replace(l,h)}for(let n=0;n<h.length;n++)for(let a=0;a<o.length;a++){const g=new RegExp(h[n]+o[a]+"a "),t=h[n]+o[a]+" ";e=e.replace(g,t)}for(let n=0;n<f.length;n++){const a=new RegExp("(\\.|\\?|!)\\s"+f[n],"g"),g=new RegExp(',\\s("|“)'+f[n],"g"),t=new RegExp('(\\."|\\.”)\\s'+f[n],"g"),l=new RegExp('(\\.|\\?|!)\\s("|“)'+f[n],"g"),h=new RegExp('(\\?”+\\?"|!”|!")\\s'+f[n],"g"),p=new RegExp('("|”)\\s("|“)'+f[n],"g"),r=new RegExp("^"+f[n],"g"),c=new RegExp("\n"+f[n],"g");e=(e=(e=(e=(e=(e=(e=(e=e.replace(a,"$1 "+x[n])).replace(g,", $1"+x[n])).replace(t,"$1 "+x[n])).replace(l,"$1 $2"+x[n])).replace(h,"$1 "+x[n])).replace(p,"$1 $2"+x[n])).replace(r,x[n])).replace(c,"\n"+x[n])}return e=(e=(e=(e=(e=(e=(e=(e=e.replace(/yvar\s/g,"ya")).replace(/y\s/g,"ya ")).replace(/jnyaa/g,"gnaa")).replace(/jnya/g,"gna")).replace(/jny\s/g,"gna ")).replace(/svaa/g,"swaa")).replace(/svā/g,"swā")).replace(/nān\s/g,"nā ")}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
